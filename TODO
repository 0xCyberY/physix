
0. [Implemented but still experimental] Implement boot via UEFI. 

1. Create process/Documentation for creating a bootable ISO Image.

2.5. Move actions in 2.000-base-build-prep.sh and 2.010-directories.sh out of the 
     software group because 1. it doesn't install software, and 2. it can't not
     be accomplished by a non-priv'd user.

4. For the moment, docbook zip pkgs have been repackaqged as a tar.gz
   to fit the process, but this case could be handled.

5. Needed software:
   - irc clients (hexchat, or irssi)
   - java
   - lua
   - gnupg
   - fio
   - xreader
   - libmnl
   - ethtool

6. Implement catalyst -P to pull down sources from the recipe's alternative url.

7. Implement Advanced Linux Sound Architecture (ALSA) because I WANT TO WATCH STAR TREK!

8. Implement Gnome. 
   Current Tracking branch: gnome, and the tree needs to brought up to date.

9. JSON Objects are not ordered, and for readability and understanding of the build
   process, the order of these elements is important. So, we should implement the
   recipes such that the recipe is encapsulated within a JSON list (which is ordered).
   This will require changes to all recipes and catalyst functions which parse it.

11. Implement LUKS disk encryption

12. Build a binary package while you are building the system. That way you shouldn't _have_to _
    build it twice.

* Update catalyst to write DB entries for 01-toolchain, 02-base, and 03-config


