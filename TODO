
0. [Implemented but still experimental] Implement boot via UEFI. 

1. Create process/Documentation for creating a bootable ISO Image.

2. [DONE] Break up toolchain scripts into prep(), config(), build(), and build_install().
   Just like 04-09 recipes

2.5. Move actions in 2.000-base-build-prep.sh and 2.010-directories.sh out of the 
     software group because 1. it doesn't install software, and 2. it can't not
     be accomplished by a non-priv'd user.

3. Break up 02-Base scripts into prep(), config(), build(), and build_install().
   Just like 04-09 recipes

4. For the moment, docbook zip pkgs have been repackaqged as a tar.gz
   to fit the process, but this case could be handled.

5. Needed software:
   - irc clients (hexchat, or irssi)
   - java
   - lua
   - gnupg
   - fio
   - xreader

6. Implement catalyst -P to pull down sources from the recipe's alternative url.

7. Implement Advanced Linux Sound Architecture (ALSA) because I WANT TO WATCH STAR TREK!

8. Implement Gnome. 
   Current Tracking branch: gnome, and the tree needs to brought up to date.

9. JSON Objects are not ordered, and for readability and understanding of the build
   process, the order of these elements is important. So, we should implement the
   recipes such that the recipe is encapsulated within a JSON list (which is ordered).
   This will require changes to all recipes and catalyst functions which parse it.

10. Maybe think about converting the build-scrips into build_directores (packages) that
    contain the build-script (similiar to a spec file - BUT NOT) and any associated configs.
    This will eliminate the need for the general config directory in each software group.

11. Implement LUKS disk encryption


